함수: 이름 뒤에 소괄호()가 있으면 함수이다.
단, 키워드 뒤에 소괄호가 있으면 함수가 아니다.
ex) if(), switch(), for(), while(), ....


[함수의 요소]
f	(x)	=	 2x+1
함수명	매개변수		리턴값

f(1) = 3
리턴값이란, 사용한 부분f(x) 을 값으로 보라는 뜻!




[함수의 선언]
(1)리턴타입 (2)함수명 (자료형 (3)매개변수1,...)
{
	(4)실행할 문장;	
	(5)return 리턴값;
}

(1)리턴 타입 : 리턴 값의 타입을 작성한다. 만약 리턴 값이 없다면 비워놓지 않고 void 타입을 작성한다
(2)함수명 : 함수이름은 동사로 작성한다(ex.연필[매개변수]을 쓴다[함수])
(3)매개변수 : 생략이 가능하지만 외부에서 값을 전달받기 위해서는 반드시 자료형과 순서에 맞게 선언해주어야 한다
(4)실행할 문장 : 생략가능, main함수에서 작성해왔던 소스코드들 
(5)리턴값 : 생략가능



[함수 선언과 사용 구분]
{}가 있으면 선언, {}가 없으면 사용




[함수 선언 시 주의사항]

함수 안에 다른 함수를 선언할 수 없으며, 함수 사용은 반드시 함수 안에서 사용해야 한다
선언은 {}밖에서, 사용은 {}안에서!!
함수를 사용할 때 선언부 소스코드 밑에 있으면 인식이 안되기 때문에
반드시 함수 선언은 사용하는 부분 위에 선언 되어야 한다



==============================

함수 선언 시 순서

[예제 문제] 두 정수의 덧셈을 구하는 함수


1. 함수명을 생각한다
add(){}

2. 매개변수를 생각한다
add(int num1, int num2){}

3. 실행할 문장을 작성한다
add(int num1, int num2){
int result=num1+num2;
}



4.리턴값을 작성한다

add(int num1, int num2){
int result=num1+num2;
return result;
}

5.리턴타입을 결정한다

int add(int num1, int num2){
int result=num1+num2;
return result;
}



함수의 사용
함수명(값,....);
리턴값이 있다면 통째로를 리턴값으로 보자!
리턴값이 없다면 값으로 봐서는 안된다

int result=add(3,6);
add(4,6)+9;


=========================================


<함수를 사용하는 이유>

1. 재사용, 특정성을 부여해서는 안된다
2. 소스코드 간결화



<리턴을 해야 할 때>
사용하는 부분에 작업의 결과를 전달해야 할 때,
함수 안에서 모든 작업이 끝나지 않을 때

<리턴을 안 할 때>
사용하는 부분에 작업의 결과를 전달할 필요가 없을 때,
함수 안에서 모든 작업이 끝날 때





=========================================


함수 복습

[정의] 
나열된 여러 명령들의 묶음



[구현부]

리턴 타입 함수명(매개변수1, 매개변수2...)
{
명령1;
명령2;
....
return 리턴값;
}



[호출부]
함수명(값1, 값2...);



=========================================================










































































