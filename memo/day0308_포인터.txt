포인터

컴퓨터의 메모리와 주소
c언어는 컴퓨터의 메모리 주소를 이용해 메모리 안에 기억되어 있는 값을 제어할 수 있는 
시스템 프로그래밍이 가능한 언어이다.

변수명과 메모리 어드레스
변수를 생성하면, 실제 메모리에 변수의 자료형에 해당하는 만큼의 공간이 할당
메모리에 할당된 공간 참조시 변수명 사용



%p : 포인터(해당) 크기만큼 메모리를 읽어와 16진수로 표현

============================

포인터란? 변수의 주소를 저장하는 공간(변수)

사용목적? 변수를 사용할 때 변수의 주소로 접근하기 위해서



자료형 변수명;
변수에 저장할 값의 자료형
3
int x;
x=3;
자료형: 저장할 값의 크기를 결정

변수의 주소를 저장하는 포인터 변수
자료형 어떤 의미?

int x=3;
int *px;
포인터 생성 시 사용하는 자료형은 
포인터=저장할 변수의 주소
해당 변수의 자료형을 따라서 적어준다
기억하고 있는 변수는 ~~자료형을 가지고 있다- 라는 것을 표시하기 위해


포인터 변수는 모두 4byte 크기를 가진다

주소값: 양의 정수형 숫자 값



=========================

포인터의 표현

-포인터에 변수의 주소 저장

자료형 *포인터변수명 = &변수명;
int a=10;
int *pa;
pa=&a;


-포인터로 변수의 값에 접근 = 간접 참조 연산자
*포인터명; 
printf("a=%d\n", a);
printf("*pa=%d\n", *pa);





=======================
0315 
포인터 연산


포인터 연산
가능한 연산: 주소를 더하거나 빼는 연산 - 자신의 값을 증가, 감소 가능
불가능한 연산: *곱하기, /나누기, ex) ptr= ptr1+ptr2; 다른포인터가 기억하고 있는 주소끼리 증가, 감소 불가


주소 연산과 혼동하기 쉬운 연산자들

ptr++; : 포인터변수가 저장한 주소값을 자료형의 크기만큼 증가

*ptr++; : 포인터변수가 저장한 변수의 값을 반환하고, 포인터변수가 저장한 주소값을 자료형의 크기만큼 증가

(*ptr)++; : 포인터변수가 저장한 변수의 값에 접근하고, 해당 변수의 값을 1증가




[포인터 복습]

포인터란: 변수의 주소를 저장하는 공간(변수)
사용목적: 변수를 사용할 때 변수의 주소로 접근하기 위해서

포인터 생성 방법: 자료형* 포인터명;
포인터에 변수 주소를 저장: 포인터명= &변수명;
포인터로 변수값 접근: *포인터명

















