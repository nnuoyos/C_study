[구조체]
추상적인 개념
공통 요소(멤버 변수)로 구조화(구체화) 시켜 놓은 것


[목적]
반복되는 공통 요소를 쉽게 관리 하기 위해서


[구조체 선언]
struct 구조체 이름
{
자료형 멤버변수명,
};

typedef struct 구조체이름
{

자료형 멤버변수명,

}구조체별명;


[선언시 주의사항] 
-함수 밖에서 선언해야 한다
-선언 시 멤버 변수에 초기값을 넣을 수 없다

===============================




[구조체 선언]


struct 구조체 이름
{
자료형 멤버변수명,
};
typedef struct 구조체이름
{
자료형 멤버변수명;
};구조체별명;




[구조체 사용]

struct 구조체이름 변수명;
구조체이름.멤버변수명=값;

struct 구조체이름 변수명={값,....};

typedef 을 선언했다면 아래와 같이 사용한다
구조체별명 변수명;









========================================
22/04/10



동적 메모리 할당: 일반적으로 변수는 프로그램을 실행하는 순간
사용할 메모리의 크기를 고려하여 메모리를 할당
-> 이렇게 프로그램이 실행되기 전 할당 되는 메모리를 정적 메모리 라고 한다

따라서, 프로그램 실행 도중 메모리를 할당 받는 것을 동적 메모리 할당이라고 한다



<동적메모리 할당이 필요한 이유?>

3명의 사용자의 점수 입력 받아 저장

int score[3];
scanf("%d", &score[0]);
scanf("%d", &score[1]);
scanf("%d", &score[2]);

=>정적 메모리 
:프로그램이 실행되기전 이미 결정된 크기를 갖는다



몇 명 입력하시겠습니까? (입력 숫자)

입력한 숫자만큼 배열의 크기를 생성
->프로그램이 실행되고 있는 순간에 배열의 크기를 지정 (내가 코드를 계속 수정할 필요가 없다!)
동적 메모리를 사용해서 프로그램이 실행 도중에 배열의 크기 지정


<동적메모리 할당 방법>
1) #include <stdlib.h>

2) malloc() 함수 사용
malloc(할당 받을 메모리 크기);
: malloc는 ()괄호 안에 적은 숫자byte 크기 만큼 메모리를 할당하여 
할당받은 메모리의 시작 주소를 반환 하는 함수


3) 저장할 포인터 생성

malloc() 함수가 할당 받은 메모리의 시작 주소를 반환하므로 
시작 주소를 저장할 포인터를 생성하여 포인터에 주소 저장 



#include <stdlib.h>

void main(){

int *pa;
pa=(int*)malloc(sizeof(int)*3);
free(pa);
}

*sizeof(자료형) : 해당 자료형의 바이트 크기 변환
free(포인터) : 동적 할당 받은 메모리 해제





==================================
22/04/10
오후 5:15 2022-04-10오후 5:15 2022-04-10


동적 메모리 할당2-2차원 배열 사용


1) #include <stdlib.h>

2) malloc() 함수 사용
3) 할당 받을 메모리를 저장할 이중 포인터 생성
4) 1차원 배열을 생성할 단일 포인터 생성
5) 단일포인터와 이중포인터 모두 free 
































