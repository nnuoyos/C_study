헤더 파일


항상 c언어 파일 상단에서 사용하기 때문에 "헤더파일" 이라고 한다
헤더파일을 추가하는 방법은 2가지가 있다
1. <헤더파일.h> : 라이브러리에 이미 있는 헤더파일
2. "헤더파일.h> : 사용자가 직접 만든 헤더파일



출력함수


1.기본 출력함수

*기본출력: printf("출력할 내용");
출력할 내용을 모니터에 출력한다

*형식지정 출력: printf("형식지정자", 출력값);
출력값을 형식에 맞춰 모니터에 출력한다

*전체구조: printf("출력할 내용 형식지정자 제어문자", 출력값);
뒤에 오는 출력값을 형식지정자에 맞게 출력하고, 출력내용과 제어문자의 의미에 맞춰 모니터에 출력한다


[자릿수 지정 출력]

*printf("%[자릿수] 형식지정자", 변수명);
*printf("%[자릿수].[소수점이하자릿수] 형식지정자", 변수명);



==============================================

입력함수

1. 기본 입력함수
*기본 입력: scanf(%[자릿수] 형식지정자", &변수명);

-자릿수: 생략가능, 입력되는 데이터 자릿수(0보다 큰 정수)
-형식지정자: 어떤 형식을 입력받을지 지정

& 의미 = 주소

==============================================

기타 입출력함수

1. getchar(), putchar()

한 문자만 입출력시 사용

*사용방법

변수명=getchar(); //입력
putchar('변수명 또는 문자형상수'); //출력


버퍼(buffer)란?
데이터의 임시저장 공간

gets(), puts()

gets(): 공백을 포함한 문자열을 입력
puts(): 

-------------------------------------


연산자

특수문장
기능이 있는 특수 문자 (☆♥ 이런 것들 말고) 



[연산자 우선순위]

최우선 연산자- 최단산쉬 관리삼대로 기억하기
단항
산술
쉬프트
관계
논리 
삼항 
대입 



결합성

하나의 수식에 동일한 연산자가 있다면, 해당 연산자의 방향에 맞게 결합되어 연산되는 성질






day 10



[비트 연산]

논리 연산자

& AND, 논리곱 : a & b 두 비트 모두 1이면 1
| OR 논리합 : a | b 두 비트 중 하나라도 1이면 1
^ XOR 배타논리합 : a ^ b 두 비트가 서로 다르면 1



단항 연산자

~ NOT 논리 부정: ~a, 1을 0으로 0을 1로 바꿔준다.

쉬프트 연산자: 빈 자리는 0으로 채워지고(음수 1로) 비트가 넘어가면 잘린다
<< 좌쉬프트: a<< b , a를 b만큼 좌로 비트 이동
>> 우쉬프트: a>>b , a를 b만큼 우로 비트 이동



